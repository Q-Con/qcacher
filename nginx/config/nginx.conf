# Main
user nginx;
worker_processes auto;
worker_rlimit_nofile 16384;
pcre_jit on;

error_log  stderr warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    include mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$upstream_cache_status" "$host" "$http_range" "$request_time" "$upstream_response_time"';

    access_log /dev/stdout  main;
    sendfile on;
    sendfile_max_chunk 0;
    tcp_nopush on;
    tcp_nodelay on;
    aio threads;
    aio_write on;
    directio 4m;
    directio_alignment 4k;
    output_buffers 2 1m;

    open_file_cache max=1000 inactive=20s;
    server_names_hash_max_size 1024;
    types_hash_max_size 2048;

    # Resolver config
    include includes/resolver;

    include conf.d/*;

    # Provide stats
    server {
        listen 80 deferred reuseport;
        server_name qcacher;
        location = / {
            stub_status on;
        }
    }

    # Include vhost definitions
    include vhosts/*.conf;

    # Pass through all other traffic
    server {
        listen 80 default;
        server_name _;

        location / {
            include includes/proxy-base;
            proxy_pass http://$host$request_uri;
        }
    }
}

stream {
    include includes/resolver;
    log_format main '$remote_addr - [$time_local] $ssl_preread_server_name $bytes_sent $bytes_received $session_time';
    access_log /dev/stdout  main;

    # Pass through HTTPS traffic
    server {
        listen 443;
        proxy_pass  $ssl_preread_server_name:443;
        ssl_preread on;
    }
}
